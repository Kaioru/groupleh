import 'package:flutter/material.dart';

void main() => runApp(new MaterialApp(
      title: 'Create GroupLeh Project',
      home: new createproject(),
    ));

class createproject extends StatefulWidget {
  @override
  State<StatefulWidget> createState() => new _CreateProjectState(new List());
}

class _Projectdat
  String project
  Stri
class _CreateProjectState extends State<createproject> {
  final GlobalKey<FormState> _formKey = new GlobalKey<FormState>();
  _Projectdata _data = new _Projectdata();

  // If empty value, the isEmail function throw a error.
  // So I changed this function with try and catch.

  String _validatedetails(String value) {
    if (value.length < 1) {
      return 'Details cannot be empty';
    }
    return null;
    if (value.length < 1) {
      return 'Name cannot be empty';
    }
    return null;
  }
  String _validatename(String value) {
  }
  void submit() {
    // First validate form.
    if (this._formKey.currentState.validate()) {
      _formKey.currentState.save(); // Save our form now.

      print('Printing the Project.');
      print('Project Name: ${_data.projectname}');
      print('Project Detail: ${_data.projectdetail}');
    }
  }
  final List<_Projectdata> projectdata;

  _CreateProjectState(@required this.projectdata) : super();

  @override
  Widget build(BuildContext context) {
    final Size screenSize = MediaQuery.of(context).size;

    return new Scaffold(
      appBar: new AppBar(
        title: new Text('Create Project'),
      ),
      body: new Container(
          padding: new EdgeInsets.all(20.0),
          child: new Form(
            key: this._formKey,
            child: new ListView(
              children: <Widget>[
                new TextFormField(
                  // Use email input type for emails.
                  decoration: new InputDecoration(
                      hintText: 'Project Alpha',
                      labelText: 'Project Name'),
                  validator: this._validatename,
                  onSaved: (String value) {
                    this._data.projectname = value;
                  },
                ),
                new TextFormField(
                    // Use secure text for passwords.
                    decoration: new InputDecoration(
                        hintText: 'This project is about....',
                        labelText: 'Project Details'),
                    validator: this._validatedetails,
                    onSaved: (String value) {
                      this._data.projectdetail = value;
                    }),
                new Container(
                  width: screenSize.width,
                  child: new RaisedButton(
                    child: new Text(
                      'Create',
                      style: new TextStyle(color: Colors.white),
                    ),
                    onPressed: this.submit,
                    color: Colors.blue,
                  ),
                  margin: new EdgeInsets.only(top: 20.0),
                ),
                ListView.builder(
                  itemCount: projectdata.length,
                  itemBuilder: (context, index) {
                    return ListTile(
                      title: Text(projectdata[index].projectname),
                      // When a user taps on the ListTile, navigate to the DetailScreen.
                      // Notice that we're not only creating a DetailScreen, we're
                      // also passing the current todo through to it!
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => DetailScreen(todo: projectdata[index]),
                          ),
                        );
                      },
                    );
                  },
                ),
              ],
            ),
          )),
    );
  }
}


class DetailScreen extends StatelessWidget {
  // Declare a field that holds the Todo
  final _Projectdata todo;

  // In the constructor, require a Todo
  DetailScreen({Key key, @required this.todo}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    // Use the Todo to create our UI
    return Scaffold(
      appBar: AppBar(
        title: Text("${todo.projectname}"),
      ),
      body: Padding(
        padding: EdgeInsets.all(16.0),
        child: Text('${todo.projectdetail}'),
      ),
    );
  }
}